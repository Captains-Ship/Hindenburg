{
    "properties": {
        "versions": {
            "type": "array",
            "description": "An array of game versions that Hindenburg will accept.",
            "items": [
                {
                    "type": "string"
                }
            ]
        },
        "clusterName": {
            "type": "string",
            "description": "The name of the cluster that this node belongs to."
        },
        "nodeId": {
            "type": "number",
            "description": "The ID of this node in relation to other nodes in the cluster."
        },
        "checkForUpdates": {
            "type": "boolean",
            "description": "Whether or not to check for updates."
        },
        "autoUpdate": {
            "type": "boolean",
            "description": "Whether or not to auto-update Hindenburg when there is an update available."
        },
        "socket": {
            "type": "object",
            "description": "Options regarding the socket that the server listens on.",
            "properties": {
                "port": {
                    "type": "number",
                    "description": "The port to listen on."
                }
            }
        },
        "plugins": {
            "type": "object",
            "description": "Options regarding plugins, such as disabling them or passing configuration options.",
            "properties": {
                "loadDirectory": {
                    "type": "boolean",
                    "description": "Whether to load all plugins in the plugin directory."
                }
            },
            "patternProperties": {
                ".+": {
                    "anyOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "object"
                        }
                    ]
                }
            }
        },
        "anticheat": {
            "type": "object",
            "description": "Advanced options for HACS, Hindenburg's Anti-Cheat System.",
            "properties": {
                "penalty": {
                    "type": "object",
                    "description": "The penalty to give a player for breaking this rule.",
                    "properties": {
                        "action": {
                            "type": "string",
                            "description": "The action that should be applied on this user for breaking this rule.",
                            "enum": ["disconnect", "ban", "ignore"]
                        },
                        "strikes": {
                            "type": "number",
                            "description": "The number of strikes that this user has before they are penalised."
                        },
                        "banAfterXDisconnects": {
                            "type": "number",
                            "description": "The number of general disconnects the player should have to have had for breaking this rule until they are banned."
                        },
                        "banDuration": {
                            "type": "number",
                            "description": "The length, in seconds, of how long to ban a player for breaking this rule."
                        },
                        "disconnectMessage": {
                            "type": "string",
                            "description": "The message to give this player when disconnecting or banning this player."
                        }
                    }
                },
                "rules": {
                    "description": "Configuration for each individual sub-rule.",
                    "patternProperties": {
                        ".+": {
                            "anyOf": [
                                {
                                    "$ref": "#/properties/anticheat",
                                    "properties": {
                                        "value": {
                                            "description": "The value of this rule, a boolean if it's a simple toggle, or an integer or string if it requires more specific configuration.",
                                            "anyOf": [
                                                {
                                                    "type": "boolean"
                                                },
                                                {
                                                    "type": "number"
                                                },
                                                {
                                                    "type": "boolean"
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "number"
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        }
                    }
                }
            }
        },
        "logging": {
            "type": "object",
            "description": "Options for logging.",
            "properties": {
                "hideSensitiveInfo": {
                    "type": "boolean",
                    "description": "Whether to hide sensitive information from logging, such as ip addresses."
                },
                "connections": {
                    "type": "object",
                    "description": "Logging options for client connections.",
                    "properties": {
                        "format": {
                            "type": "array",
                            "description": "Custom formatting for the extra information provided when logging client connections. (The part in parenthesis after their username.)",
                            "items": [{
                                "type": "string",
                                "enum": ["id", "ip", "ping", "room", "language"]
                            }]
                        }
                    }
                },
                "rooms": {
                    "type": "object",
                    "description": "Logging options for game rooms.",
                    "properties": {
                        "format": {
                            "type": "array",
                            "description": "Custom formatting for the extra information provided when rooms are logged. (The part in parenthesis after the game code.)",
                            "items": [{
                                "type": "string",
                                "enum": ["players", "map"]
                            }]
                        }
                    }
                },
                "players": {
                    "type": "object",
                    "description": "Logging options for logging players in-game.",
                    "properties": {
                        "format": {
                            "type": "array",
                            "description": "Custom formatting for the extra information provided when players are logged. (The part in parenthesis after the player's name.)",
                            "items": [{
                                "type": "string",
                                "enum": ["id", "ping", "ishost"]
                            }]
                        }
                    }
                }
            }
        },
        "reactor": {
            "description": "Options for Hindenburg's reactor integration.",
            "anyOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "object",
                    "properties": {
                        "blockClientSideOnly": {
                            "type": "boolean",
                            "description": "Whether to block reactor RPCs from mods that are declared as being client-side-only."
                        },
                        "mods": {
                            "description": "Individual configuration for each mod in regards to how Hindenburg should treat them.",
                            "type": "object",
                            "patternProperties": {
                                ".+": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "optional": {
                                                    "type": "boolean",
                                                    "description": "Whether this mod is optional, and clients can connect without it. If the client does have this mod, then it still must be the same version as the one specified in {@link ReactorModConfig.version}."
                                                },
                                                "banned": {
                                                    "type": "boolean",
                                                    "description": "Whether this mod is banned, only really applies when 'allowExtraMods' is enabled, as otherwise, only mods in the {@link ReactorConfig.mods} would be accepted anyway."
                                                },
                                                "version": {
                                                    "type": "string",
                                                    "description": "Enforce a specific version glob for this mod."
                                                },
                                                "doNetworking": {
                                                    "type": "boolean",
                                                    "description": "Whether to broadcast messages sent by this mod."
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        "allowExtraMods": {
                            "type": "boolean",
                            "description": "Whether to allow extra mods aside from those in 'mods' which would still be used to enforce certain version of mods, and to require certain mods."
                        },
                        "allowNormalClients": {
                            "type": "boolean",
                            "description": "Whether to allow normal clients to connect."
                        },
                        "requireHostMods": {
                            "type": "boolean",
                            "description": "Whether or not to require joining clients to have the same mods as the host."
                        }
                    }
                }
            ]
        },
        "rooms": {
            "type": "object",
            "properties": {
                "chatCommands": {
                    "type": "boolean"
                },
                "gameCodes": {
                    "type": "string",
                    "enum": [ "v1", "v2" ]
                },
                "enforceSettings": {
                    "type": "object",
                    "properties": {
                        "versions": {
                            "type": "number"
                        },
                        "maxPlayers": {
                            "type": "number"
                        },
                        "keywords": {
                            "type": "string",
                            "enum": [
                                "All",
                                "Other",
                                "Spanish (Latin America)",
                                "Korean",
                                "Russian",
                                "Portuguese",
                                "Arabic",
                                "Filipino",
                                "Polish",
                                "English",
                                "Japanese",
                                "Spanish",
                                "Portuguese Brazil",
                                "Dutch",
                                "French",
                                "German",
                                "Italian",
                                "ChineseSimplified",
                                "ChineseTraditional",
                                "Irish"
                            ]
                        },
                        "map": {
                            "type": "string",
                            "enum": [
                                "The Skeld",
                                "Mira HQ",
                                "Polus",
                                "The Skeld April Fools",
                                "Airship"
                            ]
                        },
                        "playerSpeed": {
                            "type": "number"
                        },
                        "crewmateVision": {
                            "type": "number"
                        },
                        "impostorVision": {
                            "type": "number"
                        },
                        "killCooldown": {
                            "type": "number"
                        },
                        "commonTasks": {
                            "type": "number"
                        },
                        "longTasks": {
                            "type": "number"
                        },
                        "shortTasks": {
                            "type": "number"
                        },
                        "numEmergencies": {
                            "type": "number"
                        },
                        "numImpostors": {
                            "type": "number"
                        },
                        "killDistance": {
                            "type": "string",
                            "enum": ["Short", "Medium", "Long"]
                        },
                        "discussionTime": {
                            "type": "number"
                        },
                        "votingTime": {
                            "type": "number"
                        },
                        "isDefaults": {
                            "type": "number"
                        },
                        "emergencyCooldown": {
                            "type": "number"
                        },
                        "confirmEjects": {
                            "type": "number"
                        },
                        "visualTasks": {
                            "type": "number"
                        },
                        "anonymousVotes": {
                            "type": "number"
                        },
                        "taskbarUpdates": {
                            "type": "string",
                            "enum": ["Always", "Meetings", "Never"]
                        }
                    }
                },
                "plugins": {
                    "type": "array",
                    "items": [{
                        "type": "string"
                    }]
                }
            }
        }
    }
}